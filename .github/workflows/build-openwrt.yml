name: Build Openwrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_branch:
        description: "Select Openwrt Branch"
        required: false
        default: "openwrt-21.02"
        type: choice
        options:
          - master
          - openwrt-22.03
          - openwrt-21.02
      openwrt_kernel:
        description: "Select Openwrt Kernel"
        required: false
        default: "5.10.125_5.15.50"
        type: choice
        options:
          - 5.15.45_5.18.5
          - 5.10.125_5.15.50
          - 5.4.200_5.10.125
          - 5.18.5
          - 5.15.50
          - 5.10.125

env:
  CONFIG_DIR: configs
  OPENWRT_REPOSITORY: https://github.com/openwrt/openwrt
  REQUIRED_PACKAGES: build-essential gawk gcc-multilib flex git gettext libncurses5-dev libssl-dev python3-distutils zlib1g-dev
  TZ: Asia/Jakarta
  WORKING_DIR: /WORKING_DIR

jobs:
  build:
    # https://openwrt.org/docs/guide-developer/toolchain/install-buildsystem#debianubuntu
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo "Processing units: $(nproc)"
          echo
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $REQUIRED_PACKAGES
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p "$WORKING_DIR"
          sudo chown $USER:$GROUPS "$WORKING_DIR"
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV

      - name: Cloning source code
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          git clone --depth 1 https://github.com/ophub/amlogic-s9xxx-openwrt .
          git clone --depth 1 -b ${{ github.event.inputs.openwrt_branch }} --single-branch "$OPENWRT_REPOSITORY" openwrt

      - name: Copy configs
        run: |
          cp -rf $CONFIG_DIR/default/* ${{ env.WORKING_DIR }}/openwrt/
          [ -e $CONFIG_DIR/${{ github.event.inputs.openwrt_branch }} ] && cp -rf $CONFIG_DIR/${{ github.event.inputs.openwrt_branch }}/* ${{ env.WORKING_DIR }}/openwrt/ 2>/dev/null || :
          [ -e $CONFIG_DIR/${{ github.event.inputs.openwrt_branch }}/.config ] && cp -rf $CONFIG_DIR/${{ github.event.inputs.openwrt_branch }}/.config ${{ env.WORKING_DIR }}/openwrt/
          cd ${{ env.WORKING_DIR }}/openwrt
          [ -e ./pre-build.sh ] && chmod +x pre-build.sh && ./pre-build.sh

      - name: Update feeds
        working-directory: ${{ env.WORKING_DIR }}/openwrt
        run: ./scripts/feeds update -a

      - name: Install feeds
        working-directory: ${{ env.WORKING_DIR }}/openwrt
        run: ./scripts/feeds install -a

      - name: Download Packages
        working-directory: ${{ env.WORKING_DIR }}/openwrt
        run: |
          make defconfig
          make -j$(($(nproc) + 1)) download

      - name: Compile Openwrt
        id: compile
        working-directory: ${{ env.WORKING_DIR }}/openwrt
        run: |
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "::set-output name=status::success"

      - name: Build Openwrt firmware
        if: steps.compile.outputs.status == 'success' && !cancelled()
        id: build
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          mkdir -p openwrt-armvirt
          cp openwrt/bin/targets/*/*/*rootfs.tar.gz openwrt-armvirt
          sudo ./make -b s905x -k ${{ github.event.inputs.openwrt_kernel }} -a true -v stable
          echo "BUILD_DATE=$(date +"%Y-%m-%d.%H%M")" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Release the firmware
        uses: ncipollo/release-action@main
        if: steps.build.outputs.status == 'success' && !cancelled()
        with:
          tag: ${{ github.event.inputs.openwrt_branch }}
          artifacts: ${{ env.WORKING_DIR }}/out/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
